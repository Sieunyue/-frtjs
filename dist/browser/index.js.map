{"version":3,"file":"index.js","sources":["../../packages/comm/src/config.ts","../../packages/comm/src/constant.ts","../../packages/comm/src/utils.ts","../../packages/core/src/client.ts","../../node_modules/.pnpm/mitt@3.0.1/node_modules/mitt/dist/mitt.mjs","../../packages/core/src/transport.ts","../../packages/browser/src/transport.ts","../../packages/browser/src/client.ts","../../packages/browser/src/plugins/error.ts","../../packages/browser/src/plugins/resource.ts","../../packages/browser/src/plugins/xhr.ts","../../packages/browser/src/plugins/promise.ts","../../packages/browser/index.ts"],"sourcesContent":["import { version } from '../package.json'\n\nexport const SDK_NAME = 'frtjs'\nexport const SDK_VERSION = version\n","\n\nexport const enum TransportCategory {\n  PV = 'pv',\n  PERF ='perf',\n  API ='api',\n  ERROR ='error',\n  CUSTOM = 'custom'\n}\nexport const enum BrowserEventTypes  {\n  XHR = 'xhr',\n  FETCH = 'fetch',\n  JS_ERROR = 'jsError',\n  DOM = 'dom',\n  RES_ERROR = 'resourceError',\n  UNHANDLEDREJECTION = 'unhandledrejection',\n  ROUTER = 'router'\n}\n\nexport type EventTypes = BrowserEventTypes\n\n","//解析错误堆栈\nconst FULL_MATCH =\n  /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i\n\n\nexport function parseStackLine(line: string) {\n  const lineMatch = line.match(FULL_MATCH)\n  if (!lineMatch) return {}\n  const filename = lineMatch[2]\n  const functionName = lineMatch[1] || ''\n  const lineno = parseInt(lineMatch[3], 10) || undefined\n  const colno = parseInt(lineMatch[4], 10) || undefined\n  return {\n    filename,\n    functionName,\n    lineno,\n    colno\n  }\n}\n\n// 解析错误堆栈\nexport function parseStackFrames(error: Error, maxDepth = 10) {\n  const { stack } = error\n  // 无 stack 时直接返回\n  if (!stack) return []\n  const frames = []\n  for (const line of stack.split('\\n').slice(1)) {\n    const frame = parseStackLine(line)\n    if (frame) {\n      frames.push(frame)\n    }\n  }\n  return frames.slice(0, maxDepth)\n}\n\n\nexport const isJsError = (e: ErrorEvent | Event) => {\n  return  e instanceof ErrorEvent\n}\n\nexport const isResourceError = (e: ErrorEvent | Event) => {\n  return !isJsError(e)\n}\n\n\nexport const toHashCode = (s: string) => s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\n\nexport const getTimestampValue = () => new Date().valueOf()\n","import { EventTypes, SDK_NAME, SDK_VERSION } from '@frtjs/comm'\nimport { BaseClientType, BaseOptionsType, BasePluginType } from '@frtjs/types'\nimport mitt, { Emitter } from 'mitt'\nimport { BaseTransport } from './transport'\n\nexport abstract class BaseClient<O extends BaseOptionsType = BaseOptionsType> implements BaseClientType<O> {\n  SDK_NAME = SDK_NAME\n  SDK_VERSION = SDK_VERSION\n  private _subscribe: Emitter<Record<EventTypes, any>>\n  options: O\n  abstract transport: BaseTransport\n  \n  constructor(options: O) {\n    this.options = options\n    this._subscribe = mitt()\n  }\n  \n  use(plugin: BasePluginType) {\n    plugin.trace.call(this, this._subscribe.emit.bind(this, plugin.name))\n    \n    // this._plugins.push(plugin)\n    const wrapperTransform = (...args: any[]) => {\n      // 先执行transform\n      const res = plugin.transform?.apply(this, args)\n      // 拿到transform返回的数据并传入\n      plugin.post?.call(this, res)\n    }\n    \n    this._subscribe.on(plugin.name, wrapperTransform)\n    return this\n  }\n  \n  // use(plugin) {\n  //   // plugin.trace.call(this, this._subscribe.emit.bind(this, plugin.name))\n  //   //\n  //   // // this._plugins.push(plugin)\n  //   // const wrapperTransform = (...args: any[]) => {\n  //   //   // 先执行transform\n  //   //   const res = plugin.transform?.apply(this, args)\n  //   //   // 拿到transform返回的数据并传入\n  //   //   plugin.post?.call(this, res)\n  //   // }\n  //   //\n  //   // this._subscribe.on(plugin.name, wrapperTransform)\n  //   // return this\n  // }\n  \n  getOptions() {\n    return this.options\n  }\n  \n  abstract send(data: any): void\n}\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","import { BaseBreadcrumbType, BaseOptionsType } from '@frtjs/types'\nimport { BaseTransportDataType } from '@frtjs/types/src/transport'\nimport { SDK_NAME, SDK_VERSION, TransportCategory } from '@frtjs/comm'\n\nexport abstract class BaseTransport<O extends BaseOptionsType = BaseOptionsType> {\n  options: O\n  constructor(options: O) {\n    this.options = options\n  }\n  /**\n   * 发送数据到服务端\n   */\n  async send(category: TransportCategory, data: BaseBreadcrumbType | BaseBreadcrumbType[]): Promise<void> {\n    if(!this.options.dsn){\n      return\n    }\n    \n    const authInfo = await this.options.getAuthInfo()\n    const transformData: BaseTransportDataType = {\n      ...authInfo,\n      category,\n      sdkName: SDK_NAME,\n      sdkVersion: SDK_VERSION,\n    }\n    \n    if(Array.isArray(data)){\n      transformData.contexts = data\n    }else{\n      transformData.context = data\n    }\n    \n    return this.sendToServer(transformData)\n  }\n  \n  abstract sendToServer(data: any): void\n}\n","import { BaseTransportDataType } from '@frtjs/types'\nimport { BaseTransport } from '@frtjs/core'\nimport { BrowserOptionsType } from './client'\n\nexport class BrowserTransport extends BaseTransport<BrowserOptionsType> {\n  constructor(options: BrowserOptionsType) {\n    super(options)\n  }\n  \n  sendToServer(data: BaseTransportDataType): void {\n    const send = typeof navigator.sendBeacon === 'function' ? this.sendByBeacon() : this.sendByXml()\n    \n    send(data)\n  }\n  \n  sendByXml() {\n    return (data: BaseTransportDataType) => {\n      console.log(123)\n      const xhr = new (window as any).oXMLHttpRequest()\n      xhr.setRequestHeader('Content-Type', 'application/json')\n      xhr.open('POST', this.options.dsn!, true)\n      xhr.send(JSON.stringify(data))\n    }\n  }\n  \n  sendByBeacon() {\n    return (data: BaseTransportDataType) => {\n      const headers = {\n        type: 'application/json',\n      }\n      const status = window.navigator.sendBeacon(this.options.dsn!, new Blob([JSON.stringify(data)], headers))\n      console.log('Beacon status', status)\n      if (!status) this.sendByXml().apply(this, [data])\n    }\n  }\n}\n","import { BaseClient } from '@frtjs/core'\nimport { BaseBreadcrumbType, BaseOptionsType } from '@frtjs/types'\nimport { BrowserTransport } from './transport'\n\nexport interface BrowserOptionsType extends BaseOptionsType {\n\n}\nexport class BrowserClient extends BaseClient<BrowserOptionsType> {\n  transport: BrowserTransport\n  constructor(options: BrowserOptionsType) {\n    super(options)\n    \n    this.transport = new BrowserTransport(options)\n  }\n  \n  send(data: BaseBreadcrumbType){\n    console.log(data)\n  }\n}\n","import { BaseJSErrorBreadcrumbType, BasePluginType } from '@frtjs/types'\nimport { BrowserEventTypes, getTimestampValue, isJsError, parseStackFrames, toHashCode, TransportCategory } from '@frtjs/comm'\n\nconst getTraceId = (breadcrumb: BaseJSErrorBreadcrumbType) => {\n  return toHashCode([breadcrumb.filename, breadcrumb.functionName, breadcrumb.position].join(',')).toString()\n}\nexport const jsErrorPlugin: BasePluginType = {\n  name: BrowserEventTypes.JS_ERROR,\n  trace(emit) {\n    if (window) {\n      window.addEventListener('error', (e) => {\n        if(!isJsError(e)) return\n        const stacks = parseStackFrames(e.error)\n        \n        const breadcrumb: BaseJSErrorBreadcrumbType = {\n          filename: stacks[0]?.filename ?? '',\n          errorType: e.error.name,\n          position: stacks[0]?.lineno + ':' + stacks[0]?.colno,\n          stack: JSON.stringify(stacks),\n          traceId: '',\n          url: window.location.href,\n          timestamp: getTimestampValue().toString(),\n          userAgent: navigator.userAgent,\n          type: BrowserEventTypes.JS_ERROR,\n          message: e.error.message,\n          functionName: stacks[0]?.functionName ?? ''\n        }\n        \n        breadcrumb.traceId = getTraceId(breadcrumb)\n        \n        emit(breadcrumb)\n      }, true)\n    }\n  },\n  transform(breadcrumb: BaseJSErrorBreadcrumbType) {\n    return {\n      ...breadcrumb\n    }\n  },\n  post(transformedData: BaseJSErrorBreadcrumbType) {\n    this.transport.send(TransportCategory.ERROR, transformedData)\n  }\n}\n","import { BaseJSErrorBreadcrumbType, BasePluginType, BaseResourceBreadcrumbType } from '@frtjs/types'\nimport { BrowserEventTypes, getTimestampValue, isResourceError, toHashCode, TransportCategory } from '@frtjs/comm'\n\nconst getTraceId = (breadcrumb: BaseResourceBreadcrumbType) => {\n  return toHashCode([breadcrumb.type, breadcrumb.filename, breadcrumb.tagName].join(',')).toString()\n}\nexport const ResErrorPlugin: BasePluginType = {\n  name: BrowserEventTypes.RES_ERROR,\n  trace(emit) {\n    if (window) {\n      window.addEventListener('error', (e: Event) => {\n        if (!isResourceError(e)) return\n        const target = e.target as (HTMLLinkElement | HTMLImageElement)\n        \n        \n        const breadcrumb: BaseResourceBreadcrumbType = {\n          filename: (target as HTMLLinkElement).href || (target as HTMLImageElement).src,\n          message: '',\n          tagName: target.tagName,\n          timestamp: getTimestampValue().toString(),\n          traceId: '',\n          type: BrowserEventTypes.RES_ERROR,\n          url: window.location.href,\n          userAgent: navigator.userAgent,\n          outerHTML: target.outerHTML\n        }\n        \n        breadcrumb.traceId = getTraceId(breadcrumb)\n        \n        emit(breadcrumb)\n        \n      }, true)\n    }\n  },\n  transform(breadcrumb: BaseJSErrorBreadcrumbType) {\n    return {\n      ...breadcrumb\n    }\n  },\n  post(transformedData: BaseJSErrorBreadcrumbType) {\n    this.transport.send(TransportCategory.ERROR, transformedData)\n  }\n}\n","import { BaseJSErrorBreadcrumbType, BasePluginType, BaseXhrBreadcrumbType } from '@frtjs/types'\nimport { BrowserEventTypes, getTimestampValue, toHashCode, TransportCategory } from '@frtjs/comm'\n\nconst getTraceId = (breadcrumb: BaseXhrBreadcrumbType) => {\n  return toHashCode([breadcrumb.type, breadcrumb.method, breadcrumb.xhrUrl].join(',')).toString()\n}\nexport const xhrErrorPlugin: BasePluginType = {\n  name: BrowserEventTypes.XHR,\n  trace(emit) {\n    if ('XMLHttpRequest' in window && typeof window.XMLHttpRequest === 'function') {\n      const oXMLHttpRequest = window.XMLHttpRequest\n      if (!(window as any).oXMLHttpRequest) {\n        // oXMLHttpRequest 为原生的 XMLHttpRequest，可以用以 SDK 进行数据上报，区分业务\n        (window as any).oXMLHttpRequest = oXMLHttpRequest\n      }\n      \n      (window as any).XMLHttpRequest = function () {\n        // 覆写 window.XMLHttpRequest\n        const xhr = new oXMLHttpRequest()\n        const { open, send } = xhr\n        const breadcrumb: BaseXhrBreadcrumbType = {\n          body: '',\n          duration: '',\n          message: '',\n          method: '',\n          response: '',\n          status: '',\n          timestamp: getTimestampValue().toString(),\n          traceId: '',\n          xhrUrl: '',\n          type: BrowserEventTypes.XHR,\n          url: window.location.href,\n          userAgent: navigator.userAgent\n        }\n        xhr.open = (method, url) => {\n          breadcrumb.method = method\n          breadcrumb.xhrUrl = url.toString()\n          open.call(xhr, method, url, true)\n        }\n        xhr.send = (body) => {\n          breadcrumb.body = (typeof body === 'string' ? body : JSON.stringify(body)) || ''\n          send.call(xhr, body)\n        }\n        xhr.addEventListener('loadend', () => {\n          const { status, response } = xhr\n          breadcrumb.status = status.toString()\n          breadcrumb.response = JSON.stringify(response)\n          \n          breadcrumb.traceId = getTraceId(breadcrumb)\n          \n          if (!(status === 200)) {\n            emit(breadcrumb)\n          }\n        })\n        return xhr\n      }\n    }\n  },\n  transform(breadcrumb: BaseJSErrorBreadcrumbType) {\n    return {\n      ...breadcrumb\n    }\n  },\n  post(transformedData: BaseJSErrorBreadcrumbType) {\n    this.transport.send(TransportCategory.ERROR, transformedData)\n  }\n}\n","import { BaseJSErrorBreadcrumbType, BasePluginType, BasePromiseBreadcrumbType } from '@frtjs/types'\nimport { BrowserEventTypes, getTimestampValue, parseStackFrames, toHashCode, TransportCategory } from '@frtjs/comm'\n\nconst getTraceId = (breadcrumb: BasePromiseBreadcrumbType) => {\n  return toHashCode([breadcrumb.type, breadcrumb.message, breadcrumb.errorType].join(',')).toString()\n}\nexport const promiseErrorPlugin: BasePluginType = {\n  name: BrowserEventTypes.UNHANDLEDREJECTION,\n  trace(emit) {\n    if (window) {\n      window.addEventListener('unhandledrejection', (e) => {\n        \n        const breadcrumb: BasePromiseBreadcrumbType = {\n          errorType: e.reason.name || 'unKnown',\n          message: e.reason.message || e.reason,\n          stack: JSON.stringify(parseStackFrames(e.reason)),\n          timestamp: getTimestampValue().toString(),\n          traceId: '',\n          type: BrowserEventTypes.UNHANDLEDREJECTION,\n          url: window.location.href,\n          userAgent: navigator.userAgent\n        }\n        \n        breadcrumb.traceId = getTraceId(breadcrumb)\n        \n        emit(breadcrumb)\n      }, true)\n    }\n  },\n  transform(breadcrumb: BaseJSErrorBreadcrumbType) {\n    return {\n      ...breadcrumb\n    }\n  },\n  post(transformedData: BaseJSErrorBreadcrumbType) {\n    this.transport.send(TransportCategory.ERROR, transformedData)\n  }\n}\n","import { BrowserClient, BrowserOptionsType } from './src/client'\nimport { jsErrorPlugin, promiseErrorPlugin, ResErrorPlugin, xhrErrorPlugin } from './src/plugins'\n\nconst init = (options: BrowserOptionsType) => {\n  const browser = new BrowserClient(options)\n  \n  browser.use(jsErrorPlugin).use(ResErrorPlugin).use(xhrErrorPlugin).use(promiseErrorPlugin)\n  \n  return browser\n}\nconst frtjs = { init }\nexport default frtjs\n"],"names":["SDK_NAME","SDK_VERSION","TransportCategory","BrowserEventTypes","FULL_MATCH","parseStackLine","line","lineMatch","match","filename","functionName","lineno","parseInt","undefined","colno","parseStackFrames","error","maxDepth","stack","frames","split","slice","frame","push","isJsError","e","ErrorEvent","toHashCode","s","reduce","a","b","charCodeAt","getTimestampValue","Date","valueOf","BaseClient","constructor","options","n","this","_subscribe","all","Map","on","t","i","get","set","off","splice","indexOf","emit","map","use","plugin","trace","call","bind","name","args","res","_a","transform","apply","_b","post","getOptions","BaseTransport","send","category","data","dsn","authInfo","getAuthInfo","transformData","Object","assign","sdkName","sdkVersion","Array","isArray","contexts","context","sendToServer","BrowserTransport","super","navigator","sendBeacon","sendByBeacon","sendByXml","console","log","xhr","window","oXMLHttpRequest","setRequestHeader","open","JSON","stringify","status","Blob","type","BrowserClient","transport","jsErrorPlugin","JS_ERROR","addEventListener","stacks","breadcrumb","errorType","position","_c","_d","traceId","url","location","href","timestamp","toString","userAgent","message","_f","_e","join","getTraceId","transformedData","ERROR","ResErrorPlugin","RES_ERROR","isResourceError","target","src","tagName","outerHTML","xhrErrorPlugin","XHR","XMLHttpRequest","body","duration","method","response","xhrUrl","promiseErrorPlugin","UNHANDLEDREJECTION","reason","frtjs","init","browser"],"mappings":"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","x_google_ignoreList":[4]}